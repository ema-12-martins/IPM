{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { LoginStore } from \"../store/LoginStore.js\";\nexport default {\n  name: 'TableComponent',\n  props: {\n    msg: String\n  },\n  data() {\n    return {\n      lista_servicos: []\n    };\n  },\n  methods: {\n    irParaPaginaServico(servicoId) {\n      this.$router.push(\"/servico/\" + servicoId + \"/infServico\").then(() => {\n        window.location.reload();\n      });\n    },\n    formataHoraDia(objeto_json) {\n      return objeto_json.dia + '-' + objeto_json.mes + '-' + objeto_json.ano + '<br>' + objeto_json.hora + ':' + objeto_json.minutos;\n    },\n    preencherListaServicos(link) {\n      fetch(link).then(response => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error('Something went wrong');\n        }\n      }).then(data => {\n        let self = this;\n        let lista = data;\n        lista.forEach(function (servico) {\n          fetch('http://localhost:3000/service-definitions?id=' + servico.definitionId).then(response => {\n            if (response.ok) {\n              return response.json();\n            } else {\n              throw new Error('Something went wrong');\n            }\n          }).then(data => {\n            data.sort((a, b) => {\n              // Aqui você deve substituir 'data' pelo campo correto que deseja ordenar\n              return new Date(b.data.ano, b.data.mes - 1, b.data.dia, b.data.hora, b.data.minutos) - new Date(a.data.ano, a.data.mes - 1, a.data.dia, a.data.hora, a.data.minutos);\n            });\n          }).then(data2 => {\n            data2[0].data = servico.data;\n            data2[0].servicoId = servico.id;\n            self.lista_servicos.push(data2[0]);\n          }).catch(error => console.log(error));\n        });\n      }).catch(error => console.log(error));\n    },\n    preencherTabela() {\n      var listLink = this.$route.path.split('/');\n      if (listLink[1] === 'servicos' && listLink[2] === 'agendados') {\n        this.preencherListaServicos('http://localhost:3000/services?estado=naoIniciado&agendamento=programado');\n      } else if (listLink[1] === 'servicos' && listLink[2] === 'fila') {\n        this.preencherListaServicos('http://localhost:3000/services?estado=naoIniciado&agendamento=filaDeEspera');\n      } else if (listLink[1] === 'servicos' && listLink[2] === 'suspensos') {\n        this.preencherListaServicos('http://localhost:3000/services?estado=parado');\n      } else if (listLink[1] === 'perfil' && listLink[2] === 'servRealizados') {\n        let idMecanico = LoginStore().getIdUtilizador;\n        this.preencherListaServicos(\"http://localhost:3000/services?estado=realizado&mecanico=\" + idMecanico);\n      }\n    }\n  },\n  mounted() {\n    // Esta função será chamada assim que o componente for montado\n    this.preencherTabela();\n  }\n};","map":{"version":3,"names":["LoginStore","name","props","msg","String","data","lista_servicos","methods","irParaPaginaServico","servicoId","$router","push","then","window","location","reload","formataHoraDia","objeto_json","dia","mes","ano","hora","minutos","preencherListaServicos","link","fetch","response","ok","json","Error","self","lista","forEach","servico","definitionId","sort","a","b","Date","data2","id","catch","error","console","log","preencherTabela","listLink","$route","path","split","idMecanico","getIdUtilizador","mounted"],"sources":["/home/emamartins12/GIT/IPM/ProjetoFinal/src/components/Table.vue"],"sourcesContent":["<template>\n    <table class=\"main-table\">\n        <thead>\n            <tr>\n                <th class=\"header-cell\">\n                    Identificação\n                </th>                     \n                <th class=\"header-cell\">\n                    Serviço\n                </th>\n                <th class=\"header-cell\">\n                    Duração\n                </th>\n                <th class=\"header-cell\">\n                    Data Entrega\n                </th>\n            </tr>\n        </thead>\n        <tbody class=\"cell-scroll\">\n            <tr v-for=\"servico in lista_servicos\" :key=\"servico.id\"> <!--Para so ter 1 identificador por celula-->\n              <td class=\"cell-button\" @click=\"irParaPaginaServico(servico.servicoId)\">{{ servico.servicoId }} </td>\n              <td class=\"cell\">{{ servico.descr}}</td>\n              <td class=\"cell\">{{ servico.duração}}min</td>\n              <td class=\"cell\" v-html=\"formataHoraDia(servico.data)\"></td>\n            </tr>\n        </tbody>\n    </table>\n</template>\n\n\n<script>\nimport { LoginStore } from \"../store/LoginStore.js\";\n\nexport default {\n    name: 'TableComponent',\n    props: {\n        msg: String\n    },\n    data() {\n        return {\n            lista_servicos:[]\n            \n        }\n    },\n    methods: {\n        irParaPaginaServico(servicoId){\n            this.$router.push(\"/servico/\"+servicoId+\"/infServico\").then(() => {\n                window.location.reload();\n            });\n        },\n        formataHoraDia(objeto_json){\n            return objeto_json.dia+'-'+objeto_json.mes+'-'+objeto_json.ano+'<br>'\n            +objeto_json.hora+':'+objeto_json.minutos\n\n        },\n        preencherListaServicos(link){\n            fetch(link)\n                .then(response => {\n                if (response.ok) {\n                    return response.json();\n                } else {\n                    throw new Error('Something went wrong');\n                }\n                })\n                .then(data => {\n                    let self = this;\n                    let lista=data\n                    lista.forEach(function(servico) {\n                        fetch('http://localhost:3000/service-definitions?id='+servico.definitionId)\n                        .then(response => {\n                            if (response.ok) {\n                                return response.json();\n                            } else {\n                                throw new Error('Something went wrong');\n                            }\n                        })\n                        .then(data => {\n                            data.sort((a, b) => {\n        // Aqui você deve substituir 'data' pelo campo correto que deseja ordenar\n        return new Date(b.data.ano, b.data.mes - 1, b.data.dia, b.data.hora, b.data.minutos) - new Date(a.data.ano, a.data.mes - 1, a.data.dia, a.data.hora, a.data.minutos);\n    });\n                        })\n                        .then(data2 => {\n                            data2[0].data = servico.data\n                            data2[0].servicoId = servico.id\n                            self.lista_servicos.push(data2[0])\n                        })\n                        .catch(error => console.log(error));\n                        \n                    });\n                })\n                .catch(error => console.log(error));\n\n        },\n\n        preencherTabela() { \n            var listLink = this.$route.path.split('/')\n            if (listLink[1] === 'servicos' && listLink[2] === 'agendados'){\n                this.preencherListaServicos('http://localhost:3000/services?estado=naoIniciado&agendamento=programado')\n            }else if(listLink[1] === 'servicos' && listLink[2] === 'fila'){\n                this.preencherListaServicos('http://localhost:3000/services?estado=naoIniciado&agendamento=filaDeEspera')\n            }else if(listLink[1] === 'servicos' && listLink[2] === 'suspensos'){\n                this.preencherListaServicos('http://localhost:3000/services?estado=parado')\n            }else if(listLink[1] === 'perfil' && listLink[2] === 'servRealizados'){\n                let idMecanico = LoginStore().getIdUtilizador\n                this.preencherListaServicos(\"http://localhost:3000/services?estado=realizado&mecanico=\"+idMecanico)\n            }\n           \n        }\n    },\n    mounted(){\n        // Esta função será chamada assim que o componente for montado\n        this.preencherTabela();\n    }\n}\n</script>   \n\n<style scoped>\n.main-table{\n    display: block;\n    width: 60rem;\n}\n\n.header-cell {    \n    background-color: #E5E5E5;\n    position: relative;\n    border: 0.1rem solid #828282;\n    justify-content: center;\n    width: 15rem;\n    height: 5rem;\n    box-sizing: border-box;\n    word-wrap: break-word;\n    font-family: 'Inter';\n    font-size: 1.5rem;\n    line-height: 1;\n    color: #000000;\n}\n\n.cell-scroll{\n    max-height: calc(6 * (5.15rem)); \n    overflow-y: auto; \n    display: block;\n}\n\n.cell {    \n    position: relative;\n    border: 0.1rem solid #828282;\n    width: 15rem;\n    height: 5rem;\n    justify-content: center;\n    text-align: center;\n    box-sizing: border-box;\n    word-wrap: break-word;\n    font-family: 'Inter';\n    font-size: 1.25rem;\n    line-height: 1;\n    color: #000000;\n}\n\n.cell-button {    \n    position: relative;\n    border: 0.1rem solid #828282;\n    width: 15rem;\n    height: 5rem;\n    justify-content: center;\n    text-align: center;\n    box-sizing: border-box;\n    word-wrap: break-word;\n    font-family: 'Inter';\n    font-size: 1.25rem;\n    line-height: 1;\n    color: #000000;\n    cursor: pointer;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}