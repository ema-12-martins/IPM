{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_servico = _resolveComponent(\"servico\");\n  const _component_servicoSuspenso = _resolveComponent(\"servicoSuspenso\");\n  const _component_servicoIniciado = _resolveComponent(\"servicoIniciado\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [$data.servicoPage ? (_openBlock(), _createBlock(_component_servico, {\n    key: 0,\n    onRouteUpdated: $options.handleRouteUpdate\n  }, null, 8 /* PROPS */, [\"onRouteUpdated\"])) : _createCommentVNode(\"v-if\", true), $data.servicoSuspenso ? (_openBlock(), _createBlock(_component_servicoSuspenso, {\n    key: 1,\n    onRouteUpdated: $options.handleRouteUpdate\n  }, null, 8 /* PROPS */, [\"onRouteUpdated\"])) : _createCommentVNode(\"v-if\", true), $data.servicoIniciado ? (_openBlock(), _createBlock(_component_servicoIniciado, {\n    key: 2\n  })) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","$data","servicoPage","_createBlock","_component_servico","key","onRouteUpdated","$options","handleRouteUpdate","_createCommentVNode","servicoSuspenso","_component_servicoSuspenso","servicoIniciado","_component_servicoIniciado"],"sources":["/home/emamartins12/GIT/IPM/ProjetoFinal/src/components/GestorServicos.vue"],"sourcesContent":["<template>\n    <servico v-if=\"servicoPage\" @routeUpdated=\"handleRouteUpdate\"></servico>\n    <servicoSuspenso v-if=\"servicoSuspenso\" @routeUpdated=\"handleRouteUpdate\"></servicoSuspenso>\n    <servicoIniciado v-if=\"servicoIniciado\"></servicoIniciado>\n</template>\n\n\n\n<script>\nimport servico from '../pages/Servico.vue';\nimport servicoSuspenso from '../pages/ServicoSuspenso.vue';\nimport ServicoIniciado from '../pages/ServicoIniciado.vue';\n\nexport default {\n    name: 'GestorServicos',\n    components: {\n        servico,\n        servicoSuspenso,\n        ServicoIniciado\n    },\n    emits: ['routeUpdated'],\n    data() {\n        return {\n            baseURL: 'http://localhost:3000/',\n            servicoId: null,\n            servico: null,\n            servicoPage: false,\n            servicoSuspenso: false,\n            servicoIniciado: false\n        }\n    },\n    created() {\n        this.verificarRota();\n        this.loadServico();\n    },\n    methods: {\n        verificarRota() {\n            var listLink = this.$route.path.split('/')\n            this.servicoId = listLink[2];\n        },\n        loadServico() {\n            const url = this.baseURL + 'services/' + this.servicoId;\n            fetch(url) \n            .then(response => response.json())\n            .then(data => {\n                this.servico = data;\n                if(this.servico.estado === 'iniciado'){\n                    this.servicoIniciado = true\n                }else if(this.servico.estado === 'parado'){\n                    this.servicoSuspenso = true\n                }else if(this.servico.estado === 'naoIniciado' || this.servico.estado === 'realizado'){\n                    this.servicoPage = true\n                }\n            })\n            .catch(() => {\n                alert(\"Não existe nenhum serviço com esse identificador\")\n            });\n        },\n        handleRouteUpdate() {\n            this.servico = null\n            this.servicoId = null\n            this.servicoPage = false\n            this.servicoIniciado = false\n            this.servicoSuspenso = false\n            this.verificarRota()\n            this.loadServico();\n        }\n    }\n}\n</script>"],"mappings":";;;;;uBAAAA,mBAAA,CAAAC,SAAA,SACmBC,KAAA,CAAAC,WAAW,I,cAA1BC,YAAA,CAAwEC,kBAAA;IAD5EC,GAAA;IACiCC,cAAY,EAAEC,QAAA,CAAAC;iDAD/CC,mBAAA,gBAE2BR,KAAA,CAAAS,eAAe,I,cAAtCP,YAAA,CAA4FQ,0BAAA;IAFhGN,GAAA;IAE6CC,cAAY,EAAEC,QAAA,CAAAC;iDAF3DC,mBAAA,gBAG2BR,KAAA,CAAAW,eAAe,I,cAAtCT,YAAA,CAA0DU,0BAAA;IAH9DR,GAAA;EAAA,MAAAI,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}