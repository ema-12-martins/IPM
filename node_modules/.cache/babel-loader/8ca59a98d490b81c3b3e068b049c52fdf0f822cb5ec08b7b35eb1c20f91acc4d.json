{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport navBar from '../components/Nav.vue';\nimport sidePainel from '../components/Side.vue';\nimport InfCliente from '@/components/InfCliente.vue';\nimport InfServico from '@/components/InfServico.vue';\nimport InfVeiculo from '@/components/InfVeiculo.vue';\nimport PopUpsErro from '@/components/PopUpsErro.vue';\nexport default {\n  name: 'PaginaServico',\n  components: {\n    navBar,\n    sidePainel,\n    InfCliente,\n    InfServico,\n    InfVeiculo,\n    PopUpsErro\n  },\n  data() {\n    return {\n      servicoId: null,\n      infoCliente: false,\n      infoServico: false,\n      infoVeiculo: false,\n      mostrarPopUp: false,\n      andarParaTabelas: null\n    };\n  },\n  created() {\n    this.verificarRota();\n    this.verificarEstadoServico();\n  },\n  methods: {\n    verificarRota() {\n      var listLink = this.$route.path.split('/');\n      this.servicoId = listLink[2];\n      var tipoInfo = listLink[3];\n      if (tipoInfo == \"infCliente\") {\n        this.infoCliente = true;\n      } else if (tipoInfo == \"infServico\") {\n        this.infoServico = true;\n      } else {\n        this.infoVeiculo = true;\n      }\n    },\n    ativarEdesativarPopUp() {\n      this.mostrarPopUp = true;\n      setTimeout(() => {\n        this.mostrarPopUp = false;\n        this.atualizarEstadoDoServico().then(() => {\n          let atual = this.$route.path;\n          this.$router.push(atual);\n\n          // Emitir evento personalizado para informar a atualização da rota\n          this.$emit('routeUpdated');\n        });\n      }, 3000);\n    },\n    async atualizarEstadoDoServico() {\n      try {\n        const response = await fetch(`http://localhost:3000/services/${this.servicoId}`);\n        const data = await response.json();\n        data.estado = \"iniciado\";\n        const requestOptions = {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(data)\n        };\n        const updateResponse = await fetch(`http://localhost:3000/services/${this.servicoId}`, requestOptions);\n        if (updateResponse.ok) {\n          console.log('Estado do serviço atualizado com sucesso!');\n        } else {\n          console.error('Erro ao atualizar o estado do serviço');\n        }\n      } catch (error) {\n        console.error('Ocorreu um erro:', error);\n      }\n    },\n    async verificarEstadoServico() {\n      try {\n        const response = await fetch(`http://localhost:3000/services/${this.servicoId}`);\n        const data = await response.json();\n        console.log(data.estado);\n        if (data.estado == \"realizado\") {\n          this.andarParaTabelas = false;\n          console.log(this.andarParaTabelas);\n        } else {\n          this.andarParaTabelas = true;\n        }\n      } catch (error) {\n        console.error(\"Erro ao buscar dados:\", error);\n      }\n    }\n  },\n  watch: {\n    // Observa mudanças na rota e chama verificarRota novamente\n    $route() {\n      this.infoCliente = false;\n      this.infoServico = false;\n      this.infoVeiculo = false;\n      this.verificarRota();\n    }\n  },\n  mounted() {\n    document.documentElement.classList.add('paginaServico-html-body');\n    document.body.classList.add('paginaServico-html-body');\n  },\n  beforeUnmount() {\n    document.documentElement.classList.remove('paginaServico-html-body');\n    document.body.classList.remove('paginaServico-html-body');\n  }\n};","map":{"version":3,"names":["navBar","sidePainel","InfCliente","InfServico","InfVeiculo","PopUpsErro","name","components","data","servicoId","infoCliente","infoServico","infoVeiculo","mostrarPopUp","andarParaTabelas","created","verificarRota","verificarEstadoServico","methods","listLink","$route","path","split","tipoInfo","ativarEdesativarPopUp","setTimeout","atualizarEstadoDoServico","then","atual","$router","push","$emit","response","fetch","json","estado","requestOptions","method","headers","body","JSON","stringify","updateResponse","ok","console","log","error","watch","mounted","document","documentElement","classList","add","beforeUnmount","remove"],"sources":["/home/emamartins12/GIT/IPM/ProjetoFinal/src/pages/Servico.vue"],"sourcesContent":["<template>\n    <div id=\"app\">\n        <navBar :paginaServico=\"this.andarParaTabelas\"> </navBar>\n        <sidePainel></sidePainel>\n\n        <main id=\"main\">\n            <div class=\"main-container\">\n                <InfCliente v-if=\"infoCliente\" :idServico=\"servicoId\" />\n                <InfServico v-if=\"infoServico\" :idServico=\"servicoId\" />\n                <InfVeiculo v-if=\"infoVeiculo\" :idServico=\"servicoId\"/>\n            </div>\n\n            <div class=\"main-buttonContainer\" v-if=\"this.andarParaTabelas\">\n                <button class=\"main-button\" @click=\"ativarEdesativarPopUp()\">\n                    Iniciar\n                </button>\n            </div>\n\n            <div class=\"popUpMotivoNaoGuardado\" v-if=\"mostrarPopUp\">\n                <PopUpsErro v-if=\"mostrarPopUp\" :idPagina=\"4\"/>\n            </div>\n        </main>\n\n        <footer id=\"footer\">\n            <div class=\"footer-content\">\n            </div>\n        </footer>\n    </div>\n</template>\n\n\n<script>\nimport navBar from '../components/Nav.vue';\nimport sidePainel from '../components/Side.vue';\nimport InfCliente from '@/components/InfCliente.vue';\nimport InfServico from '@/components/InfServico.vue';\nimport InfVeiculo from '@/components/InfVeiculo.vue';\nimport PopUpsErro from '@/components/PopUpsErro.vue';\n\nexport default {\n    name: 'PaginaServico',\n    components: {\n        navBar,\n        sidePainel,\n        InfCliente,\n        InfServico,\n        InfVeiculo,\n        PopUpsErro\n    },\n\n    data() {\n        return {\n            servicoId: null,\n            infoCliente: false,\n            infoServico: false,\n            infoVeiculo: false,\n            mostrarPopUp: false,\n            andarParaTabelas: null,\n        }\n    },\n\n    created() {\n        this.verificarRota();\n        this.verificarEstadoServico();\n    },\n\n    methods: {\n        verificarRota() {\n            var listLink = this.$route.path.split('/')\n            this.servicoId = listLink[2];\n            var tipoInfo = listLink[3];\n\n            if (tipoInfo == \"infCliente\") {\n                this.infoCliente = true;\n            } \n            else if (tipoInfo == \"infServico\") {\n                this.infoServico = true;\n            } \n            else {\n                this.infoVeiculo = true;\n            }\n        },\n\n        ativarEdesativarPopUp(){\n            this.mostrarPopUp = true;\n            setTimeout(() => {\n                this.mostrarPopUp = false;\n                this.atualizarEstadoDoServico().then(() => {\n                    let atual = this.$route.path;\n                    this.$router.push(atual);\n                    \n                    // Emitir evento personalizado para informar a atualização da rota\n                    this.$emit('routeUpdated');\n                });\n            }, 3000);\n        },\n\n        async atualizarEstadoDoServico() {\n            try {\n\n                const response = await fetch(`http://localhost:3000/services/${this.servicoId\n                }`);\n                const data = await response.json();\n\n                data.estado = \"iniciado\";\n\n                const requestOptions = {\n                    method: 'PUT',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify(data)\n                };\n                const updateResponse = await fetch(`http://localhost:3000/services/${this.servicoId}`, requestOptions);\n\n                if (updateResponse.ok) {\n                    console.log('Estado do serviço atualizado com sucesso!');\n                } else {\n                    console.error('Erro ao atualizar o estado do serviço');\n                }\n            } \n            catch (error) {\n                console.error('Ocorreu um erro:', error);\n            }\n        },\n        async verificarEstadoServico(){\n            try {\n                const response = await fetch(`http://localhost:3000/services/${this.servicoId\n                }`);\n                const data = await response.json();\n                console.log(data.estado);\n                if(data.estado == \"realizado\"){\n                    this.andarParaTabelas = false;\n                    console.log(this.andarParaTabelas);\n                }\n                else{\n                    this.andarParaTabelas = true;\n                }\n\n            } catch (error) {\n                console.error(\"Erro ao buscar dados:\", error);\n            }\n        }\n    },\n    watch: {\n        // Observa mudanças na rota e chama verificarRota novamente\n        $route() {\n            this.infoCliente = false\n            this.infoServico = false\n            this.infoVeiculo = false\n            this.verificarRota();\n        }\n    },\n    mounted() {\n        document.documentElement.classList.add('paginaServico-html-body');\n        document.body.classList.add('paginaServico-html-body');\n    },\n    beforeUnmount() {\n        document.documentElement.classList.remove('paginaServico-html-body');\n        document.body.classList.remove('paginaServico-html-body');\n    }\n}\n</script>\n\n<style>\n.paginaServico-html-body {\n    margin: 0;\n    padding: 0;\n    font-size: 0.8vw;\n}\n</style>\n\n<style scoped>\n\n#app {\n    display: grid;\n    grid-template-areas:\n      \"nav    nav\"\n      \"side   main\"\n      \"side   .\"\n      \"side footer\";\n    grid-template-rows: 1fr 10fr 0.75fr 0.75fr;\n    grid-template-columns: 1.5fr 4fr;\n    max-height: 100vh;\n}\n\n#main {\n    grid-area: main;\n}\n\n.main-container{\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    height: 85%;\n}\n\n.main-buttonContainer{\n    display: flex;\n    justify-content: flex-end;\n    margin-top: 2rem;\n    margin-right: 2rem;\n}\n\n.main-button {\n    background-color: #4A82AA;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    padding: 0.9rem 0 0.9rem 0rem;\n    width: 17.5%;\n    font-family: 'Inter';\n    font-weight: normal;\n    font-size: 2.5rem;\n    color: #FFFFFF;\n    cursor: pointer;\n}\n\n.main-button:hover {\n    background-color: #034E66;\n}\n\n.popUpMotivoNaoGuardado{\n    position: fixed;\n    z-index: 1;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    display: fixed;\n    justify-content: center;\n    align-items: center;\n    background-color: rgba(0, 0, 0, 0.5);\n}\n\n#footer {\n    grid-area: footer;\n}\n\n.footer-content {\n    background: linear-gradient(90deg, #4A82AA, #FFFFFF);\n    width: 100%;\n    height: 100%;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}