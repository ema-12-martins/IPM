{"ast":null,"code":"export default {\n  name: \"infServico\",\n  props: [\"idServico\"],\n  async created() {\n    await this.getDadosServico();\n  },\n  data() {\n    return {\n      idservicoDescricao: null,\n      estado: null,\n      agendamento: null,\n      descricao: null,\n      motivo: null,\n      servdesc: null,\n      duracao: null,\n      data: null,\n      matricula: null,\n      hora: null,\n      minutos: null\n    };\n  },\n  methods: {\n    async getDadosServico() {\n      try {\n        const response = await fetch(\"http://localhost:3000/services/\" + this.idServico);\n        const service = await response.json();\n        this.matricula = service.vehicleId;\n        this.idservicoDescricao = service.definitionId;\n        this.estado = service.estado;\n        this.agendamento = service.agendamento;\n        if (this.agendamento === \"programado\") {\n          this.data = service.data;\n        }\n        this.descricao = service[\"descrição\"];\n        this.motivo = service.motivo;\n        this.hora = service.data.hora;\n        this.minutos = service.data.minutos;\n        this.getDadosServicoDef();\n      } catch (error) {\n        /*alert(\"Não existe nenhum serviço com esse identificador\");*/\n        console.error(\"Erro ao buscar dados:\", error);\n      }\n    },\n    getDadosServicoDef() {\n      fetch(\"http://localhost:3000/service-definitions/\" + this.idservicoDescricao).then(response => response.json()).then(serviceDef => {\n        this.servdesc = serviceDef.descr;\n        this.duracao = serviceDef[\"duração\"];\n      }).catch(error => {\n        alert(\"Não existe nenhum nenhuma descrição para esse serviço.\");\n        console.error(\"Erro ao buscar dados:\", error);\n      });\n    },\n    getHora() {\n      return this.hora + \"h\" + this.minutos + \"m\";\n    }\n  }\n};","map":{"version":3,"names":["name","props","created","getDadosServico","data","idservicoDescricao","estado","agendamento","descricao","motivo","servdesc","duracao","matricula","hora","minutos","methods","response","fetch","idServico","service","json","vehicleId","definitionId","getDadosServicoDef","error","console","then","serviceDef","descr","catch","alert","getHora"],"sources":["/home/emamartins12/GIT/IPM/ProjetoFinal/src/components/InfServico.vue"],"sourcesContent":["<template>\n    <div class=\"main-headerContainer\">\n        <div class=\"main-header\">Informações sobre o serviço</div>\n    </div>\n\n    <div class=\"main-textContainer\">\n        <div class=\"main-subHeader\">\n            Serviço:\n            <div class=\"main-text\">{{ servdesc }}</div>\n        </div>\n    </div>\n\n    <div class=\"main-textContainer\" v-show=\"agendamento == 'programado'\">\n        <div class=\"main-subHeader\">\n            Hora para terminar:\n            <div class=\"main-text\">{{ getHora() }}</div>\n        </div>\n    </div>\n\n    <div class=\"main-textContainer\">\n        <div class=\"main-subHeader\">\n            Tempo do Serviço:\n            <div class=\"main-text\">{{ duracao + \"m\" }}</div>\n        </div>\n    </div>\n\n    <div class=\"main-textContainer\">\n        <div class=\"main-subHeader\">\n            Matrícula:\n            <div class=\"main-text\">{{ this.matricula }}</div>\n        </div>\n    </div>\n\n    <div class=\"main-textContainer\" v-if=\"this.estado == 'parado'  && this.motivo !== ''\">\n        <div class=\"main-subHeader\">\n            Motivo:\n            <div class=\"main-text\">{{ this.motivo }}</div>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: \"infServico\",\n    props: [\"idServico\"],\n    async created() {\n        await this.getDadosServico();\n    },\n    data() {\n        return {\n            idservicoDescricao: null,\n            estado: null,\n            agendamento: null,\n            descricao: null,\n            motivo: null,\n            servdesc: null,\n            duracao: null,\n            data: null,\n            matricula: null,\n            hora : null,\n            minutos : null\n        };\n    },\n    methods: {\n        async getDadosServico() {\n            try {\n                const response = await fetch(\"http://localhost:3000/services/\" + this.idServico);\n                const service = await response.json();\n                this.matricula = service.vehicleId;\n                this.idservicoDescricao = service.definitionId;\n                this.estado = service.estado;\n                this.agendamento = service.agendamento;\n                if (this.agendamento === \"programado\") {\n                    this.data = service.data;\n                }\n                this.descricao = service[\"descrição\"];\n                this.motivo = service.motivo;\n                this.hora = service.data.hora;\n                this.minutos = service.data.minutos;\n                this.getDadosServicoDef();\n            } catch (error) {\n                /*alert(\"Não existe nenhum serviço com esse identificador\");*/\n                console.error(\"Erro ao buscar dados:\", error);\n            }\n        },\n        getDadosServicoDef() {\n            fetch(\"http://localhost:3000/service-definitions/\" + this.idservicoDescricao)\n                .then((response) => response.json())\n                .then((serviceDef) => {\n                    this.servdesc = serviceDef.descr;\n                    this.duracao = serviceDef[\"duração\"];\n                })\n                .catch((error) => {\n                    alert(\"Não existe nenhum nenhuma descrição para esse serviço.\")\n                    console.error(\"Erro ao buscar dados:\", error);\n\n                });\n        },\n        getHora() {\n            return this.hora + \"h\" + this.minutos + \"m\";\n        },\n    },\n};\n</script>\n\n<style scoped>\n.main-headerContainer {\n    margin-top: 5rem;\n    margin-bottom: 2rem;\n    display: flex;\n    justify-content: center;\n}\n\n.main-header {\n    font-family: \"Inter\";\n    font-weight: bold;\n    font-size: 2.3rem;\n    color: #003154;\n}\n\n.main-textContainer {\n    margin-left: 5rem;\n}\n\n.main-subHeader,\n.main-text {\n    display: inline-block;\n    font-family: \"Inter\";\n    color: #000000;\n}\n\n.main-subHeader {\n    font-weight: bold;\n    font-size: 2.2rem;\n}\n\n.main-text {\n    font-weight: normal;\n    font-size: 2rem;\n}\n\n.main-buttonContainer {\n    display: flex;\n    justify-content: flex-end;\n    margin-right: 2rem;\n}\n</style>\n"],"mappings":"AA0CA,eAAe;EACXA,IAAI,EAAE,YAAY;EAClBC,KAAK,EAAE,CAAC,WAAW,CAAC;EACpB,MAAMC,OAAOA,CAAA,EAAG;IACZ,MAAM,IAAI,CAACC,eAAe,CAAC,CAAC;EAChC,CAAC;EACDC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,kBAAkB,EAAE,IAAI;MACxBC,MAAM,EAAE,IAAI;MACZC,WAAW,EAAE,IAAI;MACjBC,SAAS,EAAE,IAAI;MACfC,MAAM,EAAE,IAAI;MACZC,QAAQ,EAAE,IAAI;MACdC,OAAO,EAAE,IAAI;MACbP,IAAI,EAAE,IAAI;MACVQ,SAAS,EAAE,IAAI;MACfC,IAAG,EAAI,IAAI;MACXC,OAAM,EAAI;IACd,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACL,MAAMZ,eAAeA,CAAA,EAAG;MACpB,IAAI;QACA,MAAMa,QAAO,GAAI,MAAMC,KAAK,CAAC,iCAAgC,GAAI,IAAI,CAACC,SAAS,CAAC;QAChF,MAAMC,OAAM,GAAI,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QACrC,IAAI,CAACR,SAAQ,GAAIO,OAAO,CAACE,SAAS;QAClC,IAAI,CAAChB,kBAAiB,GAAIc,OAAO,CAACG,YAAY;QAC9C,IAAI,CAAChB,MAAK,GAAIa,OAAO,CAACb,MAAM;QAC5B,IAAI,CAACC,WAAU,GAAIY,OAAO,CAACZ,WAAW;QACtC,IAAI,IAAI,CAACA,WAAU,KAAM,YAAY,EAAE;UACnC,IAAI,CAACH,IAAG,GAAIe,OAAO,CAACf,IAAI;QAC5B;QACA,IAAI,CAACI,SAAQ,GAAIW,OAAO,CAAC,WAAW,CAAC;QACrC,IAAI,CAACV,MAAK,GAAIU,OAAO,CAACV,MAAM;QAC5B,IAAI,CAACI,IAAG,GAAIM,OAAO,CAACf,IAAI,CAACS,IAAI;QAC7B,IAAI,CAACC,OAAM,GAAIK,OAAO,CAACf,IAAI,CAACU,OAAO;QACnC,IAAI,CAACS,kBAAkB,CAAC,CAAC;MAC7B,EAAE,OAAOC,KAAK,EAAE;QACZ;QACAC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MACjD;IACJ,CAAC;IACDD,kBAAkBA,CAAA,EAAG;MACjBN,KAAK,CAAC,4CAA2C,GAAI,IAAI,CAACZ,kBAAkB,EACvEqB,IAAI,CAAEV,QAAQ,IAAKA,QAAQ,CAACI,IAAI,CAAC,CAAC,EAClCM,IAAI,CAAEC,UAAU,IAAK;QAClB,IAAI,CAACjB,QAAO,GAAIiB,UAAU,CAACC,KAAK;QAChC,IAAI,CAACjB,OAAM,GAAIgB,UAAU,CAAC,SAAS,CAAC;MACxC,CAAC,EACAE,KAAK,CAAEL,KAAK,IAAK;QACdM,KAAK,CAAC,wDAAwD;QAC9DL,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAEjD,CAAC,CAAC;IACV,CAAC;IACDO,OAAOA,CAAA,EAAG;MACN,OAAO,IAAI,CAAClB,IAAG,GAAI,GAAE,GAAI,IAAI,CAACC,OAAM,GAAI,GAAG;IAC/C;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}