{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'TableComponent',\n  props: {\n    msg: String\n  },\n  data() {\n    return {\n      lista_servicos: []\n    };\n  },\n  methods: {\n    preencherTabela() {\n      var listLink = this.$route.path.split('/');\n      if (listLink[2] === 'agendados') {\n        fetch('http://localhost:3000/services?estado=naoIniciado&agendamento=programado').then(response => {\n          if (response.ok) {\n            return response.json();\n          } else {\n            throw new Error('Something went wrong');\n          }\n        }).then(data => {\n          this.lista_servicos = data;\n        }).catch(error => console.log(error));\n      } else if (listLink[2] === 'fila') {\n        fetch('http://localhost:3000/services?estado=naoIniciado&agendamento=filaDeEspera').then(response => {\n          if (response.ok) {\n            return response.json();\n          } else {\n            throw new Error('Something went wrong');\n          }\n        }).then(data => {\n          let promises = data.map(servico => {\n            return fetch('http://localhost:3000/service-definitions?id=' + servico.definitionId).then(response => {\n              if (response.ok) {\n                return response.json();\n              } else {\n                throw new Error('Something went wrong');\n              }\n            });\n          });\n          return Promise.all(promises);\n        }).then(serviceDefinitions => {\n          let lista_servicos = [];\n          serviceDefinitions.forEach(data2 => {\n            lista_servicos.push(data2[0]);\n          });\n          console.log(lista_servicos);\n        }).catch(error => console.log(error));\n      } else if (listLink[2] === 'suspensos') {\n        fetch('http://localhost:3000/services?estado=parado').then(response => {\n          if (response.ok) {\n            return response.json();\n          } else {\n            throw new Error('Something went wrong');\n          }\n        }).then(data => {\n          this.lista_servicos = data;\n        }).catch(error => console.log(error));\n      }\n    }\n  },\n  mounted() {\n    // Esta função será chamada assim que o componente for montado\n    this.preencherTabela();\n  }\n};","map":{"version":3,"names":["name","props","msg","String","data","lista_servicos","methods","preencherTabela","listLink","$route","path","split","fetch","then","response","ok","json","Error","catch","error","console","log","promises","map","servico","definitionId","Promise","all","serviceDefinitions","forEach","data2","push","mounted"],"sources":["/home/emamartins12/GIT/IPM/ProjetoFinal/src/components/Table.vue"],"sourcesContent":["<template>\n    <table class=\"main-table\">\n        <thead>\n            <tr>\n                <th class=\"header-cell\">\n                    Identificação\n                </th>                     \n                <th class=\"header-cell\">\n                    Serviço\n                </th>\n                <th class=\"header-cell\">\n                    Duração\n                </th>\n                <th class=\"header-cell\">\n                    Data Entrega\n                </th>\n            </tr>\n        </thead>\n        <tbody class=\"cell-scroll\">\n            <tr v-for=\"servico in lista_servicos\" :key=\"servico.id\"> <!--Para so ter 1 identificador por celula-->\n              <td class=\"cell-button\">{{ servico.id }}</td>\n              <td class=\"cell\">{{ servico.descr}}</td>\n              <td class=\"cell\">{{ servico.duração}}</td>\n              <td class=\"cell\">{{ servico.duração }}</td>\n            </tr>\n        </tbody>\n    </table>\n</template>\n\n\n<script>\nexport default {\n    name: 'TableComponent',\n    props: {\n        msg: String\n    },\n    data() {\n        return {\n            lista_servicos:[]\n            \n        }\n    },\n    methods: {\n        preencherTabela() { \n            var listLink = this.$route.path.split('/')\n            if (listLink[2] === 'agendados'){\n                fetch('http://localhost:3000/services?estado=naoIniciado&agendamento=programado')\n                .then(response => {\n                if (response.ok) {\n                    return response.json();\n                } else {\n                    throw new Error('Something went wrong');\n                }\n                })\n                .then(data => {\n                    this.lista_servicos=data\n                })\n                .catch(error => console.log(error));\n            }else if(listLink[2] === 'fila'){\n                fetch('http://localhost:3000/services?estado=naoIniciado&agendamento=filaDeEspera')\n    .then(response => {\n        if (response.ok) {\n            return response.json();\n        } else {\n            throw new Error('Something went wrong');\n        }\n    })\n    .then(data => {\n        let promises = data.map(servico => {\n            return fetch('http://localhost:3000/service-definitions?id=' + servico.definitionId)\n                .then(response => {\n                    if (response.ok) {\n                        return response.json();\n                    } else {\n                        throw new Error('Something went wrong');\n                    }\n                });\n        });\n\n        return Promise.all(promises);\n    })\n    .then(serviceDefinitions => {\n        let lista_servicos = [];\n        serviceDefinitions.forEach(data2 => {\n            lista_servicos.push(data2[0]);\n        });\n        console.log(lista_servicos);\n    })\n    .catch(error => console.log(error));\n\n            }else if(listLink[2] === 'suspensos'){\n                fetch('http://localhost:3000/services?estado=parado')\n                .then(response => {\n                if (response.ok) {\n                    return response.json();\n                } else {\n                    throw new Error('Something went wrong');\n                }\n                })\n                .then(data => {\n                    this.lista_servicos=data\n                })\n                .catch(error => console.log(error));\n            }\n           \n        }\n    },\n    mounted(){\n        // Esta função será chamada assim que o componente for montado\n        this.preencherTabela();\n    }\n}\n</script>   \n\n<style scoped>\n.main-table{\n    display: block;\n    width: 60rem;\n}\n\n.header-cell {    \n    background-color: #E5E5E5;\n    position: relative;\n    border: 0.1rem solid #828282;\n    justify-content: center;\n    width: 15rem;\n    height: 5rem;\n    box-sizing: border-box;\n    word-wrap: break-word;\n    font-family: 'Inter';\n    font-size: 1.5rem;\n    line-height: 1;\n    color: #000000;\n}\n\n.cell-scroll{\n    max-height: calc(6 * (5.15rem)); \n    overflow-y: auto; \n    display: block;\n}\n\n.cell {    \n    position: relative;\n    border: 0.1rem solid #828282;\n    width: 15rem;\n    height: 5rem;\n    justify-content: center;\n    text-align: center;\n    box-sizing: border-box;\n    word-wrap: break-word;\n    font-family: 'Inter';\n    font-size: 1.25rem;\n    line-height: 1;\n    color: #000000;\n}\n\n.cell-button {    \n    position: relative;\n    border: 0.1rem solid #828282;\n    width: 15rem;\n    height: 5rem;\n    justify-content: center;\n    text-align: center;\n    box-sizing: border-box;\n    word-wrap: break-word;\n    font-family: 'Inter';\n    font-size: 1.25rem;\n    line-height: 1;\n    color: #000000;\n    cursor: pointer;\n}\n</style>"],"mappings":";AA+BA,eAAe;EACXA,IAAI,EAAE,gBAAgB;EACtBC,KAAK,EAAE;IACHC,GAAG,EAAEC;EACT,CAAC;EACDC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,cAAc,EAAC;IAEnB;EACJ,CAAC;EACDC,OAAO,EAAE;IACLC,eAAeA,CAAA,EAAG;MACd,IAAIC,QAAO,GAAI,IAAI,CAACC,MAAM,CAACC,IAAI,CAACC,KAAK,CAAC,GAAG;MACzC,IAAIH,QAAQ,CAAC,CAAC,MAAM,WAAW,EAAC;QAC5BI,KAAK,CAAC,0EAA0E,EAC/EC,IAAI,CAACC,QAAO,IAAK;UAClB,IAAIA,QAAQ,CAACC,EAAE,EAAE;YACb,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC;UAC1B,OAAO;YACH,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;UAC3C;QACA,CAAC,EACAJ,IAAI,CAACT,IAAG,IAAK;UACV,IAAI,CAACC,cAAc,GAACD,IAAG;QAC3B,CAAC,EACAc,KAAK,CAACC,KAAI,IAAKC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;MACvC,CAAC,MAAK,IAAGX,QAAQ,CAAC,CAAC,MAAM,MAAM,EAAC;QAC5BI,KAAK,CAAC,4EAA4E,EAC7FC,IAAI,CAACC,QAAO,IAAK;UACd,IAAIA,QAAQ,CAACC,EAAE,EAAE;YACb,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC;UAC1B,OAAO;YACH,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;UAC3C;QACJ,CAAC,EACAJ,IAAI,CAACT,IAAG,IAAK;UACV,IAAIkB,QAAO,GAAIlB,IAAI,CAACmB,GAAG,CAACC,OAAM,IAAK;YAC/B,OAAOZ,KAAK,CAAC,+CAA8C,GAAIY,OAAO,CAACC,YAAY,EAC9EZ,IAAI,CAACC,QAAO,IAAK;cACd,IAAIA,QAAQ,CAACC,EAAE,EAAE;gBACb,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC;cAC1B,OAAO;gBACH,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;cAC3C;YACJ,CAAC,CAAC;UACV,CAAC,CAAC;UAEF,OAAOS,OAAO,CAACC,GAAG,CAACL,QAAQ,CAAC;QAChC,CAAC,EACAT,IAAI,CAACe,kBAAiB,IAAK;UACxB,IAAIvB,cAAa,GAAI,EAAE;UACvBuB,kBAAkB,CAACC,OAAO,CAACC,KAAI,IAAK;YAChCzB,cAAc,CAAC0B,IAAI,CAACD,KAAK,CAAC,CAAC,CAAC,CAAC;UACjC,CAAC,CAAC;UACFV,OAAO,CAACC,GAAG,CAAChB,cAAc,CAAC;QAC/B,CAAC,EACAa,KAAK,CAACC,KAAI,IAAKC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;MAE3B,CAAC,MAAK,IAAGX,QAAQ,CAAC,CAAC,MAAM,WAAW,EAAC;QACjCI,KAAK,CAAC,8CAA8C,EACnDC,IAAI,CAACC,QAAO,IAAK;UAClB,IAAIA,QAAQ,CAACC,EAAE,EAAE;YACb,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC;UAC1B,OAAO;YACH,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;UAC3C;QACA,CAAC,EACAJ,IAAI,CAACT,IAAG,IAAK;UACV,IAAI,CAACC,cAAc,GAACD,IAAG;QAC3B,CAAC,EACAc,KAAK,CAACC,KAAI,IAAKC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;MACvC;IAEJ;EACJ,CAAC;EACDa,OAAOA,CAAA,EAAE;IACL;IACA,IAAI,CAACzB,eAAe,CAAC,CAAC;EAC1B;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}