{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-783f90ce\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"main-table\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"header-cell\"\n}, \" Identificação \", -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"header-cell\"\n}, \" Serviço \", -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"header-cell\"\n}, \" Duração \", -1 /* HOISTED */));\nconst _hoisted_5 = {\n  key: 0,\n  class: \"header-cell\"\n};\nconst _hoisted_6 = {\n  key: 1,\n  class: \"header-cell\"\n};\nconst _hoisted_7 = {\n  key: 2,\n  class: \"header-cell\"\n};\nconst _hoisted_8 = {\n  key: 3,\n  class: \"header-cell\"\n};\nconst _hoisted_9 = {\n  class: \"cell-scroll\"\n};\nconst _hoisted_10 = [\"onClick\"];\nconst _hoisted_11 = {\n  class: \"cell\"\n};\nconst _hoisted_12 = {\n  class: \"cell\"\n};\nconst _hoisted_13 = [\"innerHTML\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"table\", _hoisted_1, [_createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_hoisted_2, _hoisted_3, _hoisted_4, this.tipo_da_data === 'agendados' ? (_openBlock(), _createElementBlock(\"th\", _hoisted_5, \" Data Entrega \")) : _createCommentVNode(\"v-if\", true), this.tipo_da_data === 'fila' ? (_openBlock(), _createElementBlock(\"th\", _hoisted_6, \" Data Entrada \")) : _createCommentVNode(\"v-if\", true), this.tipo_da_data === 'suspensos' ? (_openBlock(), _createElementBlock(\"th\", _hoisted_7, \" Data Entrada \")) : _createCommentVNode(\"v-if\", true), this.tipo_da_data === 'servRealizados' ? (_openBlock(), _createElementBlock(\"th\", _hoisted_8, \" Data e hora (fim) \")) : _createCommentVNode(\"v-if\", true)])]), _createElementVNode(\"tbody\", _hoisted_9, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.lista_servicos, servico => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: servico.id\n    }, [_createCommentVNode(\"Para so ter 1 identificador por celula\"), _createElementVNode(\"td\", {\n      class: \"cell-button\",\n      onClick: $event => $options.irParaPaginaServico(servico.servicoId)\n    }, _toDisplayString(servico.servicoId), 9 /* TEXT, PROPS */, _hoisted_10), _createElementVNode(\"td\", _hoisted_11, _toDisplayString(servico.descr), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_12, _toDisplayString(servico.duração) + \"min\", 1 /* TEXT */), _createElementVNode(\"td\", {\n      class: \"cell\",\n      innerHTML: $options.formataHoraDia(servico.data)\n    }, null, 8 /* PROPS */, _hoisted_13)]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementVNode","key","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","tipo_da_data","_hoisted_5","_createCommentVNode","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_Fragment","_renderList","$data","lista_servicos","servico","id","onClick","$event","$options","irParaPaginaServico","servicoId","_hoisted_10","_hoisted_11","_toDisplayString","descr","_hoisted_12","duração","innerHTML","formataHoraDia","data","_hoisted_13"],"sources":["/home/emamartins12/GIT/IPM/ProjetoFinal/src/components/Table.vue"],"sourcesContent":["<template>\n    <table class=\"main-table\">\n        <thead>\n            <tr>\n                <th class=\"header-cell\">\n                    Identificação\n                </th>                     \n                <th class=\"header-cell\">\n                    Serviço\n                </th>\n                <th class=\"header-cell\">\n                    Duração\n                </th>\n                <th v-if=\"this.tipo_da_data === 'agendados'\" class=\"header-cell\">\n                    Data Entrega\n                </th>\n                <th v-if=\"this.tipo_da_data === 'fila'\" class=\"header-cell\">\n                    Data Entrada\n                </th>\n                <th v-if=\"this.tipo_da_data === 'suspensos'\" class=\"header-cell\">\n                    Data Entrada\n                </th>\n                <th v-if=\"this.tipo_da_data === 'servRealizados'\" class=\"header-cell\">\n                    Data e hora (fim)\n                </th>\n            </tr>\n        </thead>\n        <tbody class=\"cell-scroll\">\n            <tr v-for=\"servico in lista_servicos\" :key=\"servico.id\"> <!--Para so ter 1 identificador por celula-->\n              <td class=\"cell-button\" @click=\"irParaPaginaServico(servico.servicoId)\">{{ servico.servicoId }} </td>\n              <td class=\"cell\">{{ servico.descr}}</td>\n              <td class=\"cell\">{{ servico.duração}}min</td>\n              <td class=\"cell\" v-html=\"formataHoraDia(servico.data)\"></td>\n            </tr>\n        </tbody>\n    </table>\n</template>\n\n\n<script>\nimport { LoginStore } from \"../store/LoginStore.js\";\n\nexport default {\n    name: 'TableComponent',\n    props: {\n        msg: String\n    },\n    data() {\n        return {\n            lista_servicos:[],\n            tipo_da_data:\"\"\n        }\n    },\n    methods: {\n        irParaPaginaServico(servicoId){\n            this.$router.push(\"/servico/\"+servicoId+\"/infServico\").then(() => {\n                window.location.reload();\n            });\n        },\n        formataHoraDia(objeto_json){\n            return objeto_json.dia.toString().padStart(2, '0')+'-'+objeto_json.mes.toString().padStart(2, '0')+'-'+objeto_json.ano.toString().padStart(4, '0')+'<br>'\n            +objeto_json.hora.toString().padStart(2, '0')+':'+objeto_json.minutos.toString().padStart(2, '0')\n\n        },\n        preencherListaServicos(link){\n            fetch(link)\n                .then(response => {\n                if (response.ok) {\n                    return response.json();\n                } else {\n                    throw new Error('Something went wrong');\n                }\n                })\n                .then(data => {\n                    let self = this;\n                    let lista=data\n                    lista.forEach(function(servico) {\n                        fetch('http://localhost:3000/service-definitions?id='+servico.definitionId)\n                        .then(response => {\n                            if (response.ok) {\n                                return response.json();\n                            } else {\n                                throw new Error('Something went wrong');\n                            }\n                        })\n                        .then(data => {\n                            if (Array.isArray(data)) {\n                                data.sort((a, b) => {\n                                    return new Date(b.data.ano, b.data.mes - 1, b.data.dia, b.data.hora, b.data.minutos) - new Date(a.data.ano, a.data.mes - 1, a.data.dia, a.data.hora, a.data.minutos);\n                                });\n                                return data;\n                            } else {\n                                throw new Error('Data is not an array');\n                            }\n                        })\n                        .then(data2 => {\n                            data2[0].data = servico.data\n                            data2[0].servicoId = servico.id\n                            self.lista_servicos.push(data2[0])\n                        })\n                        .catch(error => console.log(error));\n                        \n                    });\n                })\n                .catch(error => console.log(error));\n\n        },\n\n        preencherTabela() { \n            var listLink = this.$route.path.split('/')\n            if (listLink[1] === 'servicos' && listLink[2] === 'agendados'){\n                this.tipo_da_data='agendados'\n                this.preencherListaServicos('http://localhost:3000/services?estado=naoIniciado&agendamento=programado')\n            }else if(listLink[1] === 'servicos' && listLink[2] === 'fila'){\n                this.tipo_da_data='fila'\n                this.preencherListaServicos('http://localhost:3000/services?estado=naoIniciado&agendamento=filaDeEspera')\n            }else if(listLink[1] === 'servicos' && listLink[2] === 'suspensos'){\n                this.tipo_da_data='suspensos'\n                this.preencherListaServicos('http://localhost:3000/services?estado=parado')\n            }else if(listLink[1] === 'perfil' && listLink[2] === 'servRealizados'){\n                this.tipo_da_data='servRealizados'\n                let idMecanico = LoginStore().getIdUtilizador\n                this.preencherListaServicos(\"http://localhost:3000/services?estado=realizado&mecanico=\"+idMecanico)\n            }\n           \n        }\n    },\n    mounted(){\n        // Esta função será chamada assim que o componente for montado\n        this.preencherTabela();\n    }\n}\n</script>   \n\n<style scoped>\n.main-table{\n    display: block;\n    width: 60rem;\n}\n\n.header-cell {    \n    background-color: #E5E5E5;\n    position: relative;\n    border: 0.1rem solid #828282;\n    justify-content: center;\n    width: 15rem;\n    height: 5rem;\n    box-sizing: border-box;\n    word-wrap: break-word;\n    font-family: 'Inter';\n    font-size: 1.5rem;\n    line-height: 1;\n    color: #000000;\n}\n\n.cell-scroll{\n    max-height: calc(6 * (5.15rem)); \n    overflow-y: auto; \n    display: block;\n}\n\n.cell {    \n    position: relative;\n    border: 0.1rem solid #828282;\n    width: 15rem;\n    height: 5rem;\n    justify-content: center;\n    text-align: center;\n    box-sizing: border-box;\n    word-wrap: break-word;\n    font-family: 'Inter';\n    font-size: 1.25rem;\n    line-height: 1;\n    color: #000000;\n}\n\n.cell-button {    \n    position: relative;\n    border: 0.1rem solid #828282;\n    width: 15rem;\n    height: 5rem;\n    justify-content: center;\n    text-align: center;\n    box-sizing: border-box;\n    word-wrap: break-word;\n    font-family: 'Inter';\n    font-size: 1.25rem;\n    line-height: 1;\n    color: #000000;\n    cursor: pointer;\n}\n</style>"],"mappings":";;;EACWA,KAAK,EAAC;AAAY;gEAGbC,mBAAA,CAEK;EAFDD,KAAK,EAAC;AAAa,GAAC,iBAExB;gEACAC,mBAAA,CAEK;EAFDD,KAAK,EAAC;AAAa,GAAC,WAExB;gEACAC,mBAAA,CAEK;EAFDD,KAAK,EAAC;AAAa,GAAC,WAExB;;EAZhBE,GAAA;EAa6DF,KAAK,EAAC;;;EAbnEE,GAAA;EAgBwDF,KAAK,EAAC;;;EAhB9DE,GAAA;EAmB6DF,KAAK,EAAC;;;EAnBnEE,GAAA;EAsBkEF,KAAK,EAAC;;;EAKzDA,KAAK,EAAC;AAAa;oBA3BlC;;EA8BkBA,KAAK,EAAC;AAAM;;EACZA,KAAK,EAAC;AAAM;oBA/B9B;;uBACIG,mBAAA,CAkCQ,SAlCRC,UAkCQ,GAjCJH,mBAAA,CAwBQ,gBAvBJA,mBAAA,CAsBK,aArBDI,UAEK,EACLC,UAEK,EACLC,UAEK,E,KACUC,YAAY,oB,cAA3BL,mBAAA,CAEK,MAFLM,UAEK,EAF4D,gBAEjE,KAfhBC,mBAAA,gB,KAgB+BF,YAAY,e,cAA3BL,mBAAA,CAEK,MAFLQ,UAEK,EAFuD,gBAE5D,KAlBhBD,mBAAA,gB,KAmB+BF,YAAY,oB,cAA3BL,mBAAA,CAEK,MAFLS,UAEK,EAF4D,gBAEjE,KArBhBF,mBAAA,gB,KAsB+BF,YAAY,yB,cAA3BL,mBAAA,CAEK,MAFLU,UAEK,EAFiE,qBAEtE,KAxBhBH,mBAAA,e,KA2BQT,mBAAA,CAOQ,SAPRa,UAOQ,I,kBANJX,mBAAA,CAKKY,SAAA,QAjCjBC,WAAA,CA4BkCC,KAAA,CAAAC,cAAc,EAAzBC,OAAO;yBAAlBhB,mBAAA,CAKK;MALkCD,GAAG,EAAEiB,OAAO,CAACC;QAAKV,mBAAA,0CAA6C,EACpGT,mBAAA,CAAqG;MAAjGD,KAAK,EAAC,aAAa;MAAEqB,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,mBAAmB,CAACL,OAAO,CAACM,SAAS;wBAAMN,OAAO,CAACM,SAAS,wBA7B1GC,WAAA,GA8BczB,mBAAA,CAAwC,MAAxC0B,WAAwC,EAAAC,gBAAA,CAApBT,OAAO,CAACU,KAAK,kBACjC5B,mBAAA,CAA6C,MAA7C6B,WAA6C,EAAAF,gBAAA,CAAzBT,OAAO,CAACY,OAAO,IAAE,KAAG,iBACxC9B,mBAAA,CAA4D;MAAxDD,KAAK,EAAC,MAAM;MAACgC,SAAqC,EAA7BT,QAAA,CAAAU,cAAc,CAACd,OAAO,CAACe,IAAI;4BAhClEC,WAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}